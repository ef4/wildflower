$(function(){"use strict";QUnit.module("popover plugin"),QUnit.test("should be defined on jquery object",function(t){t.expect(1),t.ok($(document.body).popover,"popover method is defined")}),QUnit.module("popover",{beforeEach:function(){$.fn.bootstrapPopover=$.fn.popover.noConflict()},afterEach:function(){$.fn.popover=$.fn.bootstrapPopover,delete $.fn.bootstrapPopover}}),QUnit.test("should provide no conflict",function(t){t.expect(1),t.strictEqual($.fn.popover,void 0,"popover was set back to undefined (org value)")}),QUnit.test("should return jquery collection containing the element",function(t){t.expect(2);var o=$("<div/>"),e=o.bootstrapPopover();t.ok(e instanceof $,"returns jquery collection"),t.strictEqual(e[0],o[0],"collection contains element")}),QUnit.test("should render popover element",function(t){t.expect(2);var o=$('<a href="#" title="mdo" data-content="https://twitter.com/mdo">@mdo</a>').appendTo("#qunit-fixture").bootstrapPopover("show");t.notEqual($(".popover").length,0,"popover was inserted"),o.bootstrapPopover("hide"),t.strictEqual($(".popover").length,0,"popover removed")}),QUnit.test("should store popover instance in popover data object",function(t){t.expect(1);var o=$('<a href="#" title="mdo" data-content="https://twitter.com/mdo">@mdo</a>').bootstrapPopover();t.ok(o.data("bs.popover"),"popover instance exists")}),QUnit.test("should store popover trigger in popover instance data object",function(t){t.expect(1);var o=$('<a href="#" title="ResentedHook">@ResentedHook</a>').appendTo("#qunit-fixture").bootstrapPopover();o.bootstrapPopover("show"),t.ok($(".popover").data("bs.popover"),"popover trigger stored in instance data")}),QUnit.test("should get title and content from options",function(t){t.expect(4);var o=$('<a href="#">@fat</a>').appendTo("#qunit-fixture").bootstrapPopover({title:function(){return"@fat"},content:function(){return"loves writing tests （╯°□°）╯︵ ┻━┻"}});o.bootstrapPopover("show"),t.notEqual($(".popover").length,0,"popover was inserted"),t.strictEqual($(".popover .popover-title").text(),"@fat","title correctly inserted"),t.strictEqual($(".popover .popover-content").text(),"loves writing tests （╯°□°）╯︵ ┻━┻","content correctly inserted"),o.bootstrapPopover("hide"),t.strictEqual($(".popover").length,0,"popover was removed")}),QUnit.test("should not duplicate HTML object",function(t){t.expect(6);var o=$("<div/>").html("loves writing tests （╯°□°）╯︵ ┻━┻"),e=$('<a href="#">@fat</a>').appendTo("#qunit-fixture").bootstrapPopover({content:function(){return o}});e.bootstrapPopover("show"),t.notEqual($(".popover").length,0,"popover was inserted"),t.equal($(".popover .popover-content").html(),o,"content correctly inserted"),e.bootstrapPopover("hide"),t.strictEqual($(".popover").length,0,"popover was removed"),e.bootstrapPopover("show"),t.notEqual($(".popover").length,0,"popover was inserted"),t.equal($(".popover .popover-content").html(),o,"content correctly inserted"),e.bootstrapPopover("hide"),t.strictEqual($(".popover").length,0,"popover was removed")}),QUnit.test("should get title and content from attributes",function(t){t.expect(4);var o=$('<a href="#" title="@mdo" data-content="loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻" >@mdo</a>').appendTo("#qunit-fixture").bootstrapPopover().bootstrapPopover("show");t.notEqual($(".popover").length,0,"popover was inserted"),t.strictEqual($(".popover .popover-title").text(),"@mdo","title correctly inserted"),t.strictEqual($(".popover .popover-content").text(),"loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻","content correctly inserted"),o.bootstrapPopover("hide"),t.strictEqual($(".popover").length,0,"popover was removed")}),QUnit.test("should get title and content from attributes ignoring options passed via js",function(t){t.expect(4);var o=$('<a href="#" title="@mdo" data-content="loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻" >@mdo</a>').appendTo("#qunit-fixture").bootstrapPopover({title:"ignored title option",content:"ignored content option"}).bootstrapPopover("show");t.notEqual($(".popover").length,0,"popover was inserted"),t.strictEqual($(".popover .popover-title").text(),"@mdo","title correctly inserted"),t.strictEqual($(".popover .popover-content").text(),"loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻","content correctly inserted"),o.bootstrapPopover("hide"),t.strictEqual($(".popover").length,0,"popover was removed")}),QUnit.test("should respect custom template",function(t){t.expect(3);var o=$('<a href="#">@fat</a>').appendTo("#qunit-fixture").bootstrapPopover({title:"Test",content:"Test",template:'<div class="popover foobar"><div class="arrow"></div><div class="inner"><h3 class="title"/><div class="content"><p/></div></div></div>'});o.bootstrapPopover("show"),t.notEqual($(".popover").length,0,"popover was inserted"),t.ok($(".popover").hasClass("foobar"),"custom class is present"),o.bootstrapPopover("hide"),t.strictEqual($(".popover").length,0,"popover was removed")}),QUnit.test("should destroy popover",function(t){t.expect(7);var o=$("<div/>").bootstrapPopover({trigger:"hover"}).on("click.foo",$.noop);t.ok(o.data("bs.popover"),"popover has data"),t.ok($._data(o[0],"events").mouseover&&$._data(o[0],"events").mouseout,"popover has hover event"),t.strictEqual($._data(o[0],"events").click[0].namespace,"foo","popover has extra click.foo event"),o.bootstrapPopover("show"),o.bootstrapPopover("destroy"),t.ok(!o.hasClass("in"),"popover is hidden"),t.ok(!o.data("popover"),"popover does not have data"),t.strictEqual($._data(o[0],"events").click[0].namespace,"foo","popover still has click.foo"),t.ok(!$._data(o[0],"events").mouseover&&!$._data(o[0],"events").mouseout,"popover does not have any events")}),QUnit.test("should render popover element using delegated selector",function(t){t.expect(2);var o=$('<div><a href="#" title="mdo" data-content="https://twitter.com/mdo">@mdo</a></div>').appendTo("#qunit-fixture").bootstrapPopover({selector:"a",trigger:"click"});o.find("a").trigger("click"),t.notEqual($(".popover").length,0,"popover was inserted"),o.find("a").trigger("click"),t.strictEqual($(".popover").length,0,"popover was removed")}),QUnit.test("should detach popover content rather than removing it so that event handlers are left intact",function(t){t.expect(1);var o=$('<div class="content-with-handler"><a class="btn btn-warning">Button with event handler</a></div>').appendTo("#qunit-fixture"),e=!1;$(".content-with-handler .btn").on("click",function(){e=!0});var n=$('<div><a href="#">Show popover</a></div>').appendTo("#qunit-fixture").bootstrapPopover({html:!0,trigger:"manual",container:"body",content:function(){return o}}),r=t.async();n.one("shown.bs.popover",function(){n.one("hidden.bs.popover",function(){n.one("shown.bs.popover",function(){$(".content-with-handler .btn").trigger("click"),n.bootstrapPopover("destroy"),t.ok(e,"content's event handler still present"),r()}).bootstrapPopover("show")}).bootstrapPopover("hide")}).bootstrapPopover("show")}),QUnit.test("should throw an error when initializing popover on the document object without specifying a delegation selector",function(t){t.expect(1),t["throws"](function(){$(document).bootstrapPopover({title:"What am I on?",content:"My selector is missing"})},new Error("`selector` option must be specified when initializing popover on the window.document object!"))}),QUnit.test("should do nothing when an attempt is made to hide an uninitialized popover",function(t){t.expect(1);var o=$('<span data-toggle="popover" data-title="some title" data-content="some content">some text</span>').appendTo("#qunit-fixture").on("hidden.bs.popover shown.bs.popover",function(){t.ok(!1,"should not fire any popover events")}).bootstrapPopover("hide");t.strictEqual(o.data("bs.popover"),void 0,"should not initialize the popover")}),QUnit.test("should throw an error when template contains multiple top-level elements",function(t){t.expect(1),t["throws"](function(){$('<span data-toggle="popover" data-title="some title" data-content="some content">some text</span>').appendTo("#qunit-fixture").bootstrapPopover({template:"<div>Foo</div><div>Bar</div>"}).bootstrapPopover("show")},new Error("popover `template` option must consist of exactly 1 top-level element!"))}),QUnit.test("should fire inserted event",function(t){t.expect(2);var o=t.async();$('<a href="#">@Johann-S</a>').appendTo("#qunit-fixture").on("inserted.bs.popover",function(){t.notEqual($(".popover").length,0,"popover was inserted"),t.ok(!0,"inserted event fired"),o()}).bootstrapPopover({title:"Test",content:"Test"}).bootstrapPopover("show")})});