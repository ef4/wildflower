$(function(){"use strict";QUnit.module("tooltip plugin"),QUnit.test("should be defined on jquery object",function(t){t.expect(1),t.ok($(document.body).tooltip,"tooltip method is defined")}),QUnit.module("tooltip",{beforeEach:function(){$.fn.bootstrapTooltip=$.fn.tooltip.noConflict()},afterEach:function(){$.fn.tooltip=$.fn.bootstrapTooltip,delete $.fn.bootstrapTooltip}}),QUnit.test("should provide no conflict",function(t){t.expect(1),t.strictEqual($.fn.tooltip,void 0,"tooltip was set back to undefined (org value)")}),QUnit.test("should return jquery collection containing the element",function(t){t.expect(2);var o=$("<div/>"),e=o.bootstrapTooltip();t.ok(e instanceof $,"returns jquery collection"),t.strictEqual(e[0],o[0],"collection contains element")}),QUnit.test("should expose default settings",function(t){t.expect(1),t.ok($.fn.bootstrapTooltip.Constructor.DEFAULTS,"defaults is defined")}),QUnit.test("should empty title attribute",function(t){t.expect(1);var o=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip();t.strictEqual(o.attr("title"),"","title attribute was emptied")}),QUnit.test("should add data attribute for referencing original title",function(t){t.expect(1);var o=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip();t.strictEqual(o.attr("data-original-title"),"Another tooltip","original title preserved in data attribute")}),QUnit.test("should add aria-describedby to the trigger on show",function(t){t.expect(3);var o=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip().appendTo("#qunit-fixture").bootstrapTooltip("show"),e=$(".tooltip").attr("id");t.strictEqual($("#"+e).length,1,"has a unique id"),t.strictEqual($(".tooltip").attr("aria-describedby"),o.attr("id"),"tooltip id and aria-describedby on trigger match"),t.ok(o[0].hasAttribute("aria-describedby"),"trigger has aria-describedby")}),QUnit.test("should remove aria-describedby from trigger on hide",function(t){t.expect(2);var o=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip().appendTo("#qunit-fixture");o.bootstrapTooltip("show"),t.ok(o[0].hasAttribute("aria-describedby"),"trigger has aria-describedby"),o.bootstrapTooltip("hide"),t.ok(!o[0].hasAttribute("aria-describedby"),"trigger does not have aria-describedby")}),QUnit.test("should assign a unique id tooltip element",function(t){t.expect(2),$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip("show");var o=$(".tooltip").attr("id");t.strictEqual($("#"+o).length,1,"tooltip has unique id"),t.strictEqual(o.indexOf("tooltip"),0,"tooltip id has prefix")}),QUnit.test("should place tooltips relative to placement option",function(t){t.expect(2);var o=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({placement:"bottom"});o.bootstrapTooltip("show"),t.ok($(".tooltip").is(".fade.bottom.in"),"has correct classes applied"),o.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed")}),QUnit.test("should allow html entities",function(t){t.expect(2);var o=$('<a href="#" rel="tooltip" title="&lt;b&gt;@fat&lt;/b&gt;"/>').appendTo("#qunit-fixture").bootstrapTooltip({html:!0});o.bootstrapTooltip("show"),t.notEqual($(".tooltip b").length,0,"b tag was inserted"),o.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed")}),QUnit.test("should respect custom classes",function(t){t.expect(2);var o=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({template:'<div class="tooltip some-class"><div class="tooltip-arrow"/><div class="tooltip-inner"/></div>'});o.bootstrapTooltip("show"),t.ok($(".tooltip").hasClass("some-class"),"custom class is present"),o.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed")}),QUnit.test("should fire show event",function(t){t.expect(1);var o=t.async();$('<div title="tooltip title"/>').on("show.bs.tooltip",function(){t.ok(!0,"show event fired"),o()}).bootstrapTooltip("show")}),QUnit.test("should fire inserted event",function(t){t.expect(2);var o=t.async();$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("inserted.bs.tooltip",function(){t.notEqual($(".tooltip").length,0,"tooltip was inserted"),t.ok(!0,"inserted event fired"),o()}).bootstrapTooltip("show")}),QUnit.test("should fire shown event",function(t){t.expect(1);var o=t.async();$('<div title="tooltip title"></div>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){t.ok(!0,"shown was called"),o()}).bootstrapTooltip("show")}),QUnit.test("should not fire shown event when show was prevented",function(t){t.expect(1);var o=t.async();$('<div title="tooltip title"/>').on("show.bs.tooltip",function(e){e.preventDefault(),t.ok(!0,"show event fired"),o()}).on("shown.bs.tooltip",function(){t.ok(!1,"shown event fired")}).bootstrapTooltip("show")}),QUnit.test("should fire hide event",function(t){t.expect(1);var o=t.async();$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){$(this).bootstrapTooltip("hide")}).on("hide.bs.tooltip",function(){t.ok(!0,"hide event fired"),o()}).bootstrapTooltip("show")}),QUnit.test("should fire hidden event",function(t){t.expect(1);var o=t.async();$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){$(this).bootstrapTooltip("hide")}).on("hidden.bs.tooltip",function(){t.ok(!0,"hidden event fired"),o()}).bootstrapTooltip("show")}),QUnit.test("should not fire hidden event when hide was prevented",function(t){t.expect(1);var o=t.async();$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){$(this).bootstrapTooltip("hide")}).on("hide.bs.tooltip",function(e){e.preventDefault(),t.ok(!0,"hide event fired"),o()}).on("hidden.bs.tooltip",function(){t.ok(!1,"hidden event fired")}).bootstrapTooltip("show")}),QUnit.test("should destroy tooltip",function(t){t.expect(7);var o=$("<div/>").bootstrapTooltip().on("click.foo",function(){});t.ok(o.data("bs.tooltip"),"tooltip has data"),t.ok($._data(o[0],"events").mouseover&&$._data(o[0],"events").mouseout,"tooltip has hover events"),t.strictEqual($._data(o[0],"events").click[0].namespace,"foo","tooltip has extra click.foo event"),o.bootstrapTooltip("show"),o.bootstrapTooltip("destroy"),t.ok(!o.hasClass("in"),"tooltip is hidden"),t.ok(!$._data(o[0],"bs.tooltip"),"tooltip does not have data"),t.strictEqual($._data(o[0],"events").click[0].namespace,"foo","tooltip still has click.foo"),t.ok(!$._data(o[0],"events").mouseover&&!$._data(o[0],"events").mouseout,"tooltip does not have hover events")}),QUnit.test("should show tooltip with delegate selector on click",function(t){t.expect(2);var o=$('<div><a href="#" rel="tooltip" title="Another tooltip"/></div>').appendTo("#qunit-fixture").bootstrapTooltip({selector:'a[rel="tooltip"]',trigger:"click"});o.find("a").trigger("click"),t.ok($(".tooltip").is(".fade.in"),"tooltip is faded in"),o.find("a").trigger("click"),t.strictEqual($(".tooltip").length,0,"tooltip was removed from dom")}),QUnit.test("should show tooltip when toggle is called",function(t){t.expect(1),$('<a href="#" rel="tooltip" title="tooltip on toggle"/>').appendTo("#qunit-fixture").bootstrapTooltip({trigger:"manual"}).bootstrapTooltip("toggle"),t.ok($(".tooltip").is(".fade.in"),"tooltip is faded in")}),QUnit.test("should hide previously shown tooltip when toggle is called on tooltip",function(t){t.expect(1),$('<a href="#" rel="tooltip" title="tooltip on toggle">@ResentedHook</a>').appendTo("#qunit-fixture").bootstrapTooltip({trigger:"manual"}).bootstrapTooltip("show"),$(".tooltip").bootstrapTooltip("toggle"),t.ok($(".tooltip").not(".fade.in"),"tooltip was faded out")}),QUnit.test("should place tooltips inside body when container is body",function(t){t.expect(3);var o=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({container:"body"}).bootstrapTooltip("show");t.notEqual($("body > .tooltip").length,0,"tooltip is direct descendant of body"),t.strictEqual($("#qunit-fixture > .tooltip").length,0,"tooltip is not in parent"),o.bootstrapTooltip("hide"),t.strictEqual($("body > .tooltip").length,0,"tooltip was removed from dom")}),QUnit.test("should add position class before positioning so that position-specific styles are taken into account",function(t){t.expect(1);var o="<style>.tooltip.right { white-space: nowrap; }.tooltip.right .tooltip-inner { max-width: none; }</style>",e=$(o).appendTo("head"),i=$("<div/>").appendTo("#qunit-fixture"),p=$('<a href="#" rel="tooltip" title="very very very very very very very very long tooltip in one line"/>').appendTo(i).bootstrapTooltip({placement:"right",viewport:null}).bootstrapTooltip("show"),l=i.find(".tooltip"),n=Math.round(p.offset().top+p[0].offsetHeight/2-l[0].offsetHeight/2),r=Math.round(l.offset().top),s=n-r;t.ok(1>=s&&s>=-1),p.bootstrapTooltip("hide"),i.remove(),e.remove()}),QUnit.test("should use title attribute for tooltip text",function(t){t.expect(2);var o=$('<a href="#" rel="tooltip" title="Simple tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip();o.bootstrapTooltip("show"),t.strictEqual($(".tooltip").children(".tooltip-inner").text(),"Simple tooltip","title from title attribute is set"),o.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed from dom")}),QUnit.test("should prefer title attribute over title option",function(t){t.expect(2);var o=$('<a href="#" rel="tooltip" title="Simple tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({title:"This is a tooltip with some content"});o.bootstrapTooltip("show"),t.strictEqual($(".tooltip").children(".tooltip-inner").text(),"Simple tooltip","title is set from title attribute while preferred over title option"),o.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed from dom")}),QUnit.test("should use title option",function(t){t.expect(2);var o=$('<a href="#" rel="tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({title:"This is a tooltip with some content"});o.bootstrapTooltip("show"),t.strictEqual($(".tooltip").children(".tooltip-inner").text(),"This is a tooltip with some content","title from title option is set"),o.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed from dom")}),QUnit.test("should be placed dynamically to viewport with the dynamic placement option",function(t){t.expect(6);var o=$('<style> div[rel="tooltip"] { position: absolute; } #qunit-fixture { top: inherit; left: inherit } </style>').appendTo("head"),e=$("<div/>").css({position:"relative",height:"100%"}).appendTo("#qunit-fixture"),i=$('<div style="left: 0; top: 0;" rel="tooltip" title="Top tooltip">Top Dynamic Tooltip</div>').appendTo(e).bootstrapTooltip({placement:"auto",viewport:"#qunit-fixture"});i.bootstrapTooltip("show"),t.ok($(".tooltip").is(".bottom"),"top positioned tooltip is dynamically positioned to bottom"),i.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"top positioned tooltip removed from dom");var p=$('<div style="right: 0;" rel="tooltip" title="Right tooltip">Right Dynamic Tooltip</div>').appendTo(e).bootstrapTooltip({placement:"right auto",viewport:"#qunit-fixture"});p.bootstrapTooltip("show"),t.ok($(".tooltip").is(".left"),"right positioned tooltip is dynamically positioned left"),p.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"right positioned tooltip removed from dom");var l=$('<div style="left: 0;" rel="tooltip" title="Left tooltip">Left Dynamic Tooltip</div>').appendTo(e).bootstrapTooltip({placement:"auto left",viewport:"#qunit-fixture"});l.bootstrapTooltip("show"),t.ok($(".tooltip").is(".right"),"left positioned tooltip is dynamically positioned right"),l.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"left positioned tooltip removed from dom"),e.remove(),o.remove()}),QUnit.test('should position tip on top if viewport has enough space and placement is "auto top"',function(t){t.expect(2);var o='<style>body { padding-top: 100px; }#section { height: 300px; border: 1px solid red; padding-top: 50px }div[rel="tooltip"] { width: 150px; border: 1px solid blue; }</style>',e=$(o).appendTo("head"),i=$('<div id="section"/>').appendTo("#qunit-fixture"),p=$('<div rel="tooltip" title="tip"/>').appendTo(i).bootstrapTooltip({placement:"auto top",viewport:"#section"});p.bootstrapTooltip("show"),t.ok($(".tooltip").is(".top"),"top positioned tooltip is dynamically positioned to top"),p.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed from dom"),e.remove()}),QUnit.test("should position tip on top if viewport has enough space and is not parent",function(t){t.expect(2);var o='<style>#section { height: 300px; border: 1px solid red; margin-top: 100px; }div[rel="tooltip"] { width: 150px; border: 1px solid blue; }</style>',e=$(o).appendTo("head"),i=$('<div id="section"/>').appendTo("#qunit-fixture"),p=$('<div rel="tooltip" title="tip"/>').appendTo(i).bootstrapTooltip({placement:"auto top",viewport:"#qunit-fixture"});p.bootstrapTooltip("show"),t.ok($(".tooltip").is(".top"),"top positioned tooltip is dynamically positioned to top"),p.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed from dom"),e.remove()}),QUnit.test('should position tip on bottom if the tip\'s dimension exceeds the viewport area and placement is "auto top"',function(t){t.expect(2);var o='<style>body { padding-top: 100px; }#section { height: 300px; border: 1px solid red; }div[rel="tooltip"] { width: 150px; border: 1px solid blue; }</style>',e=$(o).appendTo("head"),i=$('<div id="section"/>').appendTo("#qunit-fixture"),p=$('<div rel="tooltip" title="tip"/>').appendTo(i).bootstrapTooltip({placement:"auto top",viewport:"#section"});p.bootstrapTooltip("show"),t.ok($(".tooltip").is(".bottom"),"top positioned tooltip is dynamically positioned to bottom"),p.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed from dom"),e.remove()}),QUnit.test('should display the tip on top whenever scrollable viewport has enough room if the given placement is "auto top"',function(t){t.expect(2);var o="<style>#scrollable-div { height: 200px; overflow: auto; }.tooltip-item { margin: 200px 0 400px; width: 150px; }</style>",e=$(o).appendTo("head"),i=$('<div id="scrollable-div"/>').appendTo("#qunit-fixture"),p=$('<div rel="tooltip" title="tip" class="tooltip-item">Tooltip Item</div>').appendTo(i).bootstrapTooltip({placement:"top auto",viewport:"#scrollable-div"});$("#scrollable-div").scrollTop(100),p.bootstrapTooltip("show"),t.ok($(".tooltip").is(".fade.top.in"),"has correct classes applied"),p.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed from dom"),e.remove()}),QUnit.test('should display the tip on bottom whenever scrollable viewport doesn\'t have enough room if the given placement is "auto top"',function(t){t.expect(2);var o="<style>#scrollable-div { height: 200px; overflow: auto; }.tooltip-item { padding: 200px 0 400px; width: 150px; }</style>",e=$(o).appendTo("head"),i=$('<div id="scrollable-div"/>').appendTo("#qunit-fixture"),p=$('<div rel="tooltip" title="tip" class="tooltip-item">Tooltip Item</div>').appendTo(i).bootstrapTooltip({placement:"top auto",viewport:"#scrollable-div"});$("#scrollable-div").scrollTop(200),p.bootstrapTooltip("show"),t.ok($(".tooltip").is(".fade.bottom.in"),"has correct classes applied"),p.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed from dom"),e.remove()}),QUnit.test('should display the tip on bottom whenever scrollable viewport has enough room if the given placement is "auto bottom"',function(t){t.expect(2);var o="<style>#scrollable-div { height: 200px; overflow: auto; }.spacer { height: 400px; }.spacer:first-child { height: 200px; }.tooltip-item { width: 150px; }</style>",e=$(o).appendTo("head"),i=$('<div id="scrollable-div"/>').appendTo("#qunit-fixture"),p=$('<div rel="tooltip" title="tip" class="tooltip-item">Tooltip Item</div>').appendTo(i).before('<div class="spacer"/>').after('<div class="spacer"/>').bootstrapTooltip({placement:"bottom auto",viewport:"#scrollable-div"});$("#scrollable-div").scrollTop(200),p.bootstrapTooltip("show"),t.ok($(".tooltip").is(".fade.bottom.in"),"has correct classes applied"),p.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed from dom"),e.remove()}),QUnit.test('should display the tip on top whenever scrollable viewport doesn\'t have enough room if the given placement is "auto bottom"',function(t){t.expect(2);var o="<style>#scrollable-div { height: 200px; overflow: auto; }.tooltip-item { margin-top: 400px; width: 150px; }</style>",e=$(o).appendTo("head"),i=$('<div id="scrollable-div"/>').appendTo("#qunit-fixture"),p=$('<div rel="tooltip" title="tip" class="tooltip-item">Tooltip Item</div>').appendTo(i).bootstrapTooltip({placement:"bottom auto",viewport:"#scrollable-div"});$("#scrollable-div").scrollTop(400),p.bootstrapTooltip("show"),t.ok($(".tooltip").is(".fade.top.in"),"has correct classes applied"),p.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed from dom"),e.remove()}),QUnit.test("should adjust the tip's top position when up against the top of the viewport",function(t){t.expect(2);var o='<style>.tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }a[rel="tooltip"] { position: fixed; }</style>',e=$(o).appendTo("head"),i=$("<div/>").appendTo("#qunit-fixture"),p=$('<a href="#" rel="tooltip" title="tip" style="top: 0px; left: 0px;"/>').appendTo(i).bootstrapTooltip({placement:"right",viewport:{selector:"body",padding:12}});p.bootstrapTooltip("show"),t.strictEqual(Math.round(i.find(".tooltip").offset().top),12),p.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed from dom"),e.remove()}),QUnit.test("should adjust the tip's top position when up against the bottom of the viewport",function(t){t.expect(2);var o='<style>.tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }a[rel="tooltip"] { position: fixed; }</style>',e=$(o).appendTo("head"),i=$("<div/>").appendTo("#qunit-fixture"),p=$('<a href="#" rel="tooltip" title="tip" style="bottom: 0px; left: 0px;"/>').appendTo(i).bootstrapTooltip({placement:"right",viewport:{selector:"body",padding:12}});p.bootstrapTooltip("show");var l=i.find(".tooltip");t.strictEqual(Math.round(l.offset().top),Math.round($(window).height()-12-l[0].offsetHeight)),p.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed from dom"),i.remove(),e.remove()}),QUnit.test("should adjust the tip's left position when up against the left of the viewport",function(t){t.expect(2);var o='<style>.tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }a[rel="tooltip"] { position: fixed; }</style>',e=$(o).appendTo("head"),i=$("<div/>").appendTo("#qunit-fixture"),p=$('<a href="#" rel="tooltip" title="tip" style="top: 0px; left: 0px;"/>').appendTo(i).bootstrapTooltip({placement:"bottom",viewport:{selector:"body",padding:12}});p.bootstrapTooltip("show"),t.strictEqual(Math.round(i.find(".tooltip").offset().left),12),p.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed from dom"),i.remove(),e.remove()}),QUnit.test("should adjust the tip's left position when up against the right of the viewport",function(t){t.expect(2);var o='<style>.tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }a[rel="tooltip"] { position: fixed; }</style>',e=$(o).appendTo("head"),i=$("<div/>").appendTo("body"),p=$('<a href="#" rel="tooltip" title="tip" style="top: 0px; right: 0px;"/>').appendTo(i).bootstrapTooltip({placement:"bottom",viewport:{selector:"body",padding:12}});p.bootstrapTooltip("show");var l=i.find(".tooltip");t.strictEqual(Math.round(l.offset().left),Math.round($(window).width()-12-l[0].offsetWidth)),p.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed from dom"),i.remove(),e.remove()}),QUnit.test("should adjust the tip when up against the right of an arbitrary viewport",function(t){t.expect(2);var o='<style>.tooltip, .tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }.container-viewport { position: absolute; top: 50px; left: 60px; width: 300px; height: 300px; }a[rel="tooltip"] { position: fixed; }</style>',e=$(o).appendTo("head"),i=$('<div class="container-viewport"/>').appendTo(document.body),p=$('<a href="#" rel="tooltip" title="tip" style="top: 50px; left: 350px;"/>').appendTo(i).bootstrapTooltip({placement:"bottom",viewport:".container-viewport"});p.bootstrapTooltip("show");var l=i.find(".tooltip");t.strictEqual(Math.round(l.offset().left),Math.round(60+i.width()-l[0].offsetWidth)),p.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed from dom"),i.remove(),e.remove()}),QUnit.test("should get viewport element from function",function(t){t.expect(3);var o='<style>.tooltip, .tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }.container-viewport { position: absolute; top: 50px; left: 60px; width: 300px; height: 300px; }a[rel="tooltip"] { position: fixed; }</style>',e=$(o).appendTo("head"),i=$('<div class="container-viewport"/>').appendTo(document.body),p=$('<a href="#" rel="tooltip" title="tip" style="top: 50px; left: 350px;"/>').appendTo(i);p.bootstrapTooltip({placement:"bottom",viewport:function(o){return t.strictEqual(o[0],p[0],"viewport function was passed target as argument"),o.closest(".container-viewport")}}),p.bootstrapTooltip("show");var l=i.find(".tooltip");t.strictEqual(Math.round(l.offset().left),Math.round(60+i.width()-l[0].offsetWidth)),p.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed from dom"),i.remove(),e.remove()}),QUnit.test("should not misplace the tip when the right edge offset is greater or equal than the viewport width",function(t){t.expect(2);var o="<style>.tooltip, .tooltip *, .tooltip *:before, .tooltip *:after { box-sizing: border-box; }.container-viewport, .container-viewport *, .container-viewport *:before, .container-viewport *:after { box-sizing: border-box; }.tooltip, .tooltip .tooltip-inner { width: 50px; height: 50px; max-width: none; background: red; }.container-viewport { padding: 100px; margin-left: 100px; width: 100px; }</style>",e=$(o).appendTo("head"),i=$('<div class="container-viewport"/>').appendTo(document.body),p=$('<a href="#" rel="tooltip" title="tip">foobar</a>').appendTo(i).bootstrapTooltip({viewport:".container-viewport"});p.bootstrapTooltip("show");var l=i.find(".tooltip");t.strictEqual(Math.round(l.offset().left),Math.round(p.position().left+p.width()/2-l[0].offsetWidth/2)),p.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed from dom"),i.remove(),e.remove()}),QUnit.test("should not error when trying to show an auto-placed tooltip that has been removed from the dom",function(t){t.expect(1);var o=!0,e=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").one("show.bs.tooltip",function(){$(this).remove()}).bootstrapTooltip({placement:"auto"});try{e.bootstrapTooltip("show")}catch(i){o=!1,console.log(i)}t.ok(o,".tooltip('show') should not throw an error if element no longer is in dom")}),QUnit.test("should place tooltip on top of element",function(t){t.expect(1);var o=t.async(),e='<div><p style="margin-top: 200px"><a href="#" title="very very very very very very very long tooltip">Hover me</a></p></div>',i=$(e).css({position:"absolute",bottom:0,left:0,textAlign:"right",width:300,height:300}).appendTo("#qunit-fixture"),p=i.find("a").css("margin-top",200).bootstrapTooltip({placement:"top",animate:!1}).bootstrapTooltip("show"),l=i.find(".tooltip");setTimeout(function(){t.ok(Math.round(l.offset().top+l.outerHeight())<=Math.round(p.offset().top)),o()},0)}),QUnit.test("should place tooltip inside viewport",function(t){t.expect(1);var o=t.async(),e=$("<div/>").css({position:"absolute",width:200,height:200,bottom:0,left:0}).appendTo("#qunit-fixture");$('<a href="#" title="Very very very very very very very very long tooltip">Hover me</a>').css({position:"absolute",top:0,left:0}).appendTo(e).bootstrapTooltip({placement:"top"}).bootstrapTooltip("show"),setTimeout(function(){t.ok($(".tooltip").offset().left>=0),o()},0)}),QUnit.test("should show tooltip if leave event hasn't occurred before delay expires",function(t){t.expect(2);var o=t.async(),e=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:150});setTimeout(function(){t.ok(!$(".tooltip").is(".fade.in"),"100ms: tooltip is not faded in")},100),setTimeout(function(){t.ok($(".tooltip").is(".fade.in"),"200ms: tooltip is faded in"),o()},200),e.trigger("mouseenter")}),QUnit.test("should not show tooltip if leave event occurs before delay expires",function(t){t.expect(2);var o=t.async(),e=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:150});setTimeout(function(){t.ok(!$(".tooltip").is(".fade.in"),"100ms: tooltip not faded in"),e.trigger("mouseout")},100),setTimeout(function(){t.ok(!$(".tooltip").is(".fade.in"),"200ms: tooltip not faded in"),o()},200),e.trigger("mouseenter")}),QUnit.test("should not hide tooltip if leave event occurs and enter event occurs within the hide delay",function(t){t.expect(3);var o=t.async(),e=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:{show:0,hide:150}});setTimeout(function(){t.ok($(".tooltip").is(".fade.in"),"1ms: tooltip faded in"),e.trigger("mouseout"),setTimeout(function(){t.ok($(".tooltip").is(".fade.in"),"100ms: tooltip still faded in"),e.trigger("mouseenter")},100),setTimeout(function(){t.ok($(".tooltip").is(".fade.in"),"200ms: tooltip still faded in"),o()},200)},0),e.trigger("mouseenter")}),QUnit.test("should not show tooltip if leave event occurs before delay expires",function(t){t.expect(2);var o=t.async(),e=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:150});setTimeout(function(){t.ok(!$(".tooltip").is(".fade.in"),"100ms: tooltip not faded in"),e.trigger("mouseout")},100),setTimeout(function(){t.ok(!$(".tooltip").is(".fade.in"),"200ms: tooltip not faded in"),o()},200),e.trigger("mouseenter")}),QUnit.test("should not show tooltip if leave event occurs before delay expires, even if hide delay is 0",function(t){t.expect(2);var o=t.async(),e=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:{show:150,hide:0}});setTimeout(function(){t.ok(!$(".tooltip").is(".fade.in"),"100ms: tooltip not faded in"),e.trigger("mouseout")},100),setTimeout(function(){t.ok(!$(".tooltip").is(".fade.in"),"250ms: tooltip not faded in"),o()},250),e.trigger("mouseenter")}),QUnit.test("should wait 200ms before hiding the tooltip",function(t){t.expect(3);var o=t.async(),e=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:{show:0,hide:150}});setTimeout(function(){t.ok(e.data("bs.tooltip").$tip.is(".fade.in"),"1ms: tooltip faded in"),e.trigger("mouseout"),setTimeout(function(){t.ok(e.data("bs.tooltip").$tip.is(".fade.in"),"100ms: tooltip still faded in")},100),setTimeout(function(){t.ok(!e.data("bs.tooltip").$tip.is(".in"),"200ms: tooltip removed"),o()},200)},0),e.trigger("mouseenter")}),QUnit.test("should correctly position tooltips on SVG elements",function(t){if(!window.SVGElement)return void t.expect(0);t.expect(2);var o=t.async(),e="<style>.tooltip, .tooltip *, .tooltip *:before, .tooltip *:after { box-sizing: border-box; }.tooltip { position: absolute; }.tooltip .tooltip-inner { width: 24px; height: 24px; font-family: Helvetica; }</style>",i=$(e).appendTo("head");$("#qunit-fixture").append('<div style="position: fixed; top: 0; left: 0;">  <svg width="200" height="200">    <circle cx="100" cy="100" r="10" title="m" id="theCircle" />  </svg></div>');var p=$("#theCircle");p.on("shown.bs.tooltip",function(){var e=$(".tooltip").offset();i.remove(),t.ok(Math.abs(e.left-88)<=1,"tooltip has correct horizontal location"),p.bootstrapTooltip("hide"),t.strictEqual($(".tooltip").length,0,"tooltip removed from dom"),o()}).bootstrapTooltip({container:"body",placement:"top",trigger:"manual"}),p.bootstrapTooltip("show")}),QUnit.test("should correctly determine auto placement based on container rather than parent",function(t){t.expect(2);var o=t.async(),e="<style>.tooltip, .tooltip *, .tooltip *:before, .tooltip *:after { box-sizing: border-box; }.tooltip { position: absolute; display: block; font-size: 12px; line-height: 1.4; }.tooltip .tooltip-inner { max-width: 200px; padding: 3px 8px; font-family: Helvetica; text-align: center; }#trigger-parent {  position: fixed;  top: 100px;  right: 17px;}</style>",i=$(e).appendTo("head");$("#qunit-fixture").append('<span id="trigger-parent"><a id="tt-trigger" title="If a_larger_text is written here, it won\'t fit using older broken version of BS">HOVER OVER ME</a></span>');var p=$("#tt-trigger");p.on("shown.bs.tooltip",function(){var o=$(".tooltip-inner"),e=o.offset().left+o.width(),i=p.offset().left;t.ok(i>e,"tooltip with auto left placement, when near the right edge of the viewport, gets left placement"),p.bootstrapTooltip("hide")}).on("hidden.bs.tooltip",function(){i.remove(),$(this).remove(),t.strictEqual($(".tooltip").length,0,"tooltip removed from dom"),o()}).bootstrapTooltip({container:"body",placement:"auto left",trigger:"manual"}),p.bootstrapTooltip("show")}),QUnit.test("should not reload the tooltip on subsequent mouseenter events",function(t){t.expect(1);var o=function(){var t=$.fn.bootstrapTooltip.Constructor.prototype.getUID("tooltip");return'<p id="tt-content">'+t+"</p><p>"+t+"</p><p>"+t+"</p>"},e=$('<span id="tt-outer" rel="tooltip" data-trigger="hover" data-placement="top">some text</span>').appendTo("#qunit-fixture");e.bootstrapTooltip({html:!0,animation:!1,trigger:"hover",delay:{show:0,hide:500},container:e,title:o}),$("#tt-outer").trigger("mouseenter");var i=$("#tt-content").text();$("#tt-content").trigger("mouseenter"),t.strictEqual(i,$("#tt-content").text())}),QUnit.test("should not reload the tooltip if the mouse leaves and re-enters before hiding",function(t){t.expect(4);var o=function(){var t=$.fn.bootstrapTooltip.Constructor.prototype.getUID("tooltip");return'<p id="tt-content">'+t+"</p><p>"+t+"</p><p>"+t+"</p>"},e=$('<span id="tt-outer" rel="tooltip" data-trigger="hover" data-placement="top">some text</span>').appendTo("#qunit-fixture");e.bootstrapTooltip({html:!0,animation:!1,trigger:"hover",delay:{show:0,hide:500},container:e,title:o});var i=e.data("bs.tooltip");$("#tt-outer").trigger("mouseenter");var p=$("#tt-content").text();$("#tt-outer").trigger("mouseleave"),t.strictEqual(p,$("#tt-content").text()),t.ok("out"==i.hoverState,'the tooltip hoverState should be set to "out"'),$("#tt-content").trigger("mouseenter"),t.ok("in"==i.hoverState,'the tooltip hoverState should be set to "in"'),t.strictEqual(p,$("#tt-content").text())}),QUnit.test("should position arrow correctly when tooltip is moved to not appear offscreen",function(t){t.expect(2);var o=t.async(),e="<style>.tooltip, .tooltip *, .tooltip *:before, .tooltip *:after { box-sizing: border-box; }.tooltip { position: absolute; }.tooltip-arrow { position: absolute; width: 0; height: 0; }.tooltip .tooltip-inner { max-width: 200px; padding: 3px 8px; }</style>",i=$(e).appendTo("head");$('<a href="#" title="tooltip title" style="position: absolute; bottom: 0; right: 0;">Foobar</a>').appendTo("body").on("shown.bs.tooltip",function(){var o=$(this).data("bs.tooltip").$tip.find(".tooltip-arrow").attr("style");t.ok(/left/i.test(o)&&!/top/i.test(o),"arrow positioned correctly"),$(this).bootstrapTooltip("hide")}).on("hidden.bs.tooltip",function(){i.remove(),$(this).remove(),t.strictEqual($(".tooltip").length,0,"tooltip removed from dom"),
o()}).bootstrapTooltip({container:"body",placement:"top",trigger:"manual"}).bootstrapTooltip("show")}),QUnit.test("should correctly position tooltips on transformed elements",function(t){var o=document.documentElement.style;if(!("transform"in o||"webkitTransform"in o||"msTransform"in o))return void t.expect(0);t.expect(2);var e=t.async(),i="<style>#qunit-fixture { top: 0; left: 0; }.tooltip, .tooltip *, .tooltip *:before, .tooltip *:after { box-sizing: border-box; }.tooltip { position: absolute; }.tooltip .tooltip-inner { width: 24px; height: 24px; font-family: Helvetica; }#target { position: absolute; top: 100px; left: 50px; width: 100px; height: 200px; -webkit-transform: rotate(270deg); -ms-transform: rotate(270deg); transform: rotate(270deg); }</style>",p=$(i).appendTo("head"),l=$('<div id="target" title="1"/>').appendTo("#qunit-fixture");l.on("shown.bs.tooltip",function(){var o=$(".tooltip").offset();p.remove(),t.ok(Math.abs(o.left-88)<=1,"tooltip has correct horizontal location"),t.ok(Math.abs(o.top-126)<=1,"tooltip has correct vertical location"),l.bootstrapTooltip("hide"),e()}).bootstrapTooltip({container:"body",placement:"top",trigger:"manual"}),l.bootstrapTooltip("show")}),QUnit.test("should throw an error when initializing tooltip on the document object without specifying a delegation selector",function(t){t.expect(1),t["throws"](function(){$(document).bootstrapTooltip({title:"What am I on?"})},new Error("`selector` option must be specified when initializing tooltip on the window.document object!"))}),QUnit.test("should do nothing when an attempt is made to hide an uninitialized tooltip",function(t){t.expect(1);var o=$('<span data-toggle="tooltip" title="some tip">some text</span>').appendTo("#qunit-fixture").on("hidden.bs.tooltip shown.bs.tooltip",function(){t.ok(!1,"should not fire any tooltip events")}).bootstrapTooltip("hide");t.strictEqual(o.data("bs.tooltip"),void 0,"should not initialize the tooltip")}),QUnit.test("should throw an error when template contains multiple top-level elements",function(t){t.expect(1),t["throws"](function(){$('<a href="#" data-toggle="tooltip" title="Another tooltip"></a>').appendTo("#qunit-fixture").bootstrapTooltip({template:"<div>Foo</div><div>Bar</div>"}).bootstrapTooltip("show")},new Error("tooltip `template` option must consist of exactly 1 top-level element!"))}),QUnit.test("should not remove tooltip if multiple triggers are set and one is still active",function(t){function o(){return p.hasClass("in")||"in"==i.hoverState}t.expect(41);var e=$("<button>Trigger</button>").appendTo("#qunit-fixture").bootstrapTooltip({trigger:"click hover focus",animation:!1}),i=e.data("bs.tooltip"),p=i.tip(),l=[["mouseenter","mouseleave"],["focusin","focusout"],["click","click"],["mouseenter","focusin","focusout","mouseleave"],["mouseenter","focusin","mouseleave","focusout"],["focusin","mouseenter","mouseleave","focusout"],["focusin","mouseenter","focusout","mouseleave"],["click","focusin","mouseenter","focusout","mouseleave","click"],["mouseenter","click","focusin","focusout","mouseleave","click"],["mouseenter","focusin","click","click","mouseleave","focusout"]];t.ok(!o()),$.each(l,function(i,p){for(var l=0,n=p.length;n>l;l++)e.trigger(p[l]),t.equal(n-1>l,o())})})});